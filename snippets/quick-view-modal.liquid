{% comment %}
  Quick View Modal Snippet
  Usage: {% render 'quick-view-modal', product: product %}
{% endcomment %}

<div class="quick-view-product">
  <div class="quick-view-product__grid">
    <div class="quick-view-product__media">
      {% if product.featured_media %}
        <div class="quick-view-product__image">
          <img
            src="{{ product.featured_media | image_url: width: 800 }}"
            alt="{{ product.featured_media.alt | escape }}"
            loading="lazy"
            width="800"
            height="{{ 800 | divided_by: product.featured_media.aspect_ratio | ceil }}"
          >
        </div>
      {% endif %}
      
      {% if product.media.size > 1 %}
        <div class="quick-view-product__thumbnails">
          {% for media in product.media limit: 5 %}
            <button 
              class="quick-view-thumbnail {% if forloop.first %}active{% endif %}"
              data-media-id="{{ media.id }}"
              type="button"
            >
              <img
                src="{{ media | image_url: width: 100 }}"
                alt="{{ media.alt | escape }}"
                loading="lazy"
              >
            </button>
          {% endfor %}
        </div>
      {% endif %}
    </div>
    
    <div class="quick-view-product__info">
      <h2 class="quick-view-product__title">{{ product.title }}</h2>
      
      {% if product.vendor != blank %}
        <p class="quick-view-product__vendor">{{ product.vendor }}</p>
      {% endif %}
      
      <div class="quick-view-product__price">
        <span class="price">
          {{ product.selected_or_first_available_variant.price | money }}
        </span>
        {% if product.selected_or_first_available_variant.compare_at_price > product.selected_or_first_available_variant.price %}
          <span class="price--compare">
            {{ product.selected_or_first_available_variant.compare_at_price | money }}
          </span>
          <span class="price--badge">
            {% assign savings = product.selected_or_first_available_variant.compare_at_price | minus: product.selected_or_first_available_variant.price %}
            {% assign savings_percent = savings | times: 100 | divided_by: product.selected_or_first_available_variant.compare_at_price %}
            Save {{ savings_percent }}%
          </span>
        {% endif %}
      </div>
      
      {% if product.description != blank %}
        <div class="quick-view-product__description">
          {{ product.description | strip_html | truncatewords: 30 }}
        </div>
      {% endif %}
      
      {% form 'product', product, id: 'quick-view-form', class: 'quick-view-product__form' %}
        {% if product.variants.size > 1 %}
          <div class="quick-view-product__variants">
            {% for option in product.options_with_values %}
              <div class="product-option">
                <label for="Option-{{ option.position }}">{{ option.name }}</label>
                <select 
                  name="options[{{ option.name | escape }}]" 
                  id="Option-{{ option.position }}"
                  class="product-option__select"
                  data-option-position="{{ option.position }}"
                >
                  {% for value in option.values %}
                    <option 
                      value="{{ value | escape }}"
                      {% if option.selected_value == value %}selected{% endif %}
                    >
                      {{ value }}
                    </option>
                  {% endfor %}
                </select>
              </div>
            {% endfor %}
          </div>
        {% endif %}
        
        <div class="quick-view-product__quantity">
          <label for="Quantity-quick-view">Quantity</label>
          <input
            type="number"
            id="Quantity-quick-view"
            name="quantity"
            value="1"
            min="1"
            class="quantity__input"
          >
        </div>
        
        <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}" id="quick-view-variant-id">
        
        <button
          type="submit"
          name="add"
          class="quick-view-product__button button button--primary"
          {% unless product.selected_or_first_available_variant.available %}disabled{% endunless %}
        >
          <span class="quick-view-add-text">
            {% if product.selected_or_first_available_variant.available %}
              Add to Cart - {{ product.selected_or_first_available_variant.price | money }}
            {% else %}
              Sold Out
            {% endif %}
          </span>
        </button>
        
        <a href="{{ product.url }}" class="quick-view-product__link">
          View Full Details →
        </a>
      {% endform %}
    </div>
  </div>
</div>

<script>
(function() {
  // Product variant data
  const productData = {{ product.variants | json }};
  
  // Thumbnail switching
  document.querySelectorAll('.quick-view-thumbnail').forEach(thumb => {
    thumb.addEventListener('click', function() {
      const mainImage = document.querySelector('.quick-view-product__image img');
      const thumbImg = this.querySelector('img');
      
      if (mainImage && thumbImg) {
        const newSrc = thumbImg.src.replace('width=100', 'width=800');
        mainImage.src = newSrc;
      }
      
      document.querySelectorAll('.quick-view-thumbnail').forEach(t => t.classList.remove('active'));
      this.classList.add('active');
    });
  });

  // Variant selection and price update
  const variantSelects = document.querySelectorAll('.product-option__select');
  const hiddenVariantInput = document.getElementById('quick-view-variant-id');
  const addButton = document.querySelector('.quick-view-product__button');
  const addButtonText = document.querySelector('.quick-view-add-text');
  const priceElement = document.querySelector('.quick-view-product__price .price');

  if (variantSelects.length > 0 && hiddenVariantInput) {
    variantSelects.forEach(select => {
      select.addEventListener('change', updateVariant);
    });
    
    function updateVariant() {
      const selectedOptions = Array.from(variantSelects).map(s => s.value);
      
      // Find matching variant
      const matchingVariant = productData.find(variant => {
        return selectedOptions.every((option, index) => {
          return variant.options[index] === option;
        });
      });
      
      if (matchingVariant) {
        hiddenVariantInput.value = matchingVariant.id;
        
        // Update price
        if (priceElement) {
          const formatter = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: '{{ cart.currency.iso_code }}'
          });
          priceElement.textContent = formatter.format(matchingVariant.price / 100);
        }
        
        // Update button
        if (matchingVariant.available) {
          addButton.disabled = false;
          addButtonText.textContent = `Add to Cart - ${formatter.format(matchingVariant.price / 100)}`;
        } else {
          addButton.disabled = true;
          addButtonText.textContent = 'Sold Out';
        }
      }
    }
  }

  // Handle form submission via AJAX
  const quickViewForm = document.getElementById('quick-view-form');
  if (quickViewForm) {
    quickViewForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      const formData = new FormData(this);
      addButton.disabled = true;
      addButtonText.textContent = 'Adding...';
      
      fetch('/cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {
        addButtonText.textContent = '✓ Added to Cart!';
        
        // Trigger cart update event
        document.dispatchEvent(new CustomEvent('cart:updated'));
        
        // Reset button after 2 seconds
        setTimeout(() => {
          addButton.disabled = false;
          addButtonText.textContent = 'Add to Cart';
        }, 2000);
      })
      .catch(error => {
        addButtonText.textContent = 'Error - Try Again';
        addButton.disabled = false;
        console.error('Error:', error);
      });
    });
  }
})();
</script>

<style>
.quick-view-product__grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
}

.quick-view-product__image img {
  width: 100%;
  height: auto;
  border-radius: 8px;
}

.quick-view-product__thumbnails {
  display: flex;
  gap: 0.5rem;
  margin-top: 1rem;
  flex-wrap: wrap;
}

.quick-view-thumbnail {
  border: 2px solid transparent;
  padding: 0;
  background: none;
  cursor: pointer;
  border-radius: 4px;
  overflow: hidden;
  width: 60px;
  height: 60px;
  transition: border-color 0.2s;
}

.quick-view-thumbnail:hover {
  border-color: rgba(var(--color-foreground), 0.3);
}

.quick-view-thumbnail.active {
  border-color: rgba(var(--color-foreground), 0.8);
}

.quick-view-thumbnail img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.quick-view-product__title {
  font-size: 1.75rem;
  margin: 0 0 0.5rem;
  font-weight: 600;
  line-height: 1.2;
}

.quick-view-product__vendor {
  color: rgba(var(--color-foreground), 0.6);
  margin: 0 0 1rem;
  font-size: 0.875rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.quick-view-product__price {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 1.5rem;
  flex-wrap: wrap;
}

.price {
  font-size: 1.5rem;
  font-weight: 600;
  color: rgb(var(--color-foreground));
}

.price--compare {
  text-decoration: line-through;
  color: rgba(var(--color-foreground), 0.5);
  font-size: 1.125rem;
}

.price--badge {
  background: #e74c3c;
  color: white;
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.75rem;
  font-weight: 600;
}

.quick-view-product__description {
  margin-bottom: 1.5rem;
  line-height: 1.6;
  color: rgba(var(--color-foreground), 0.75);
  font-size: 0.9375rem;
}

.quick-view-product__variants {
  margin-bottom: 1.5rem;
}

.product-option {
  margin-bottom: 1rem;
}

.product-option label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  font-size: 0.875rem;
}

.product-option__select {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid rgba(var(--color-foreground), 0.2);
  border-radius: 4px;
  font-size: 1rem;
  background: rgb(var(--color-background));
  cursor: pointer;
}

.product-option__select:focus {
  outline: none;
  border-color: rgba(var(--color-foreground), 0.5);
}

.quick-view-product__quantity {
  margin-bottom: 1.5rem;
}

.quick-view-product__quantity label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 600;
  font-size: 0.875rem;
}

.quantity__input {
  width: 120px;
  padding: 0.75rem;
  border: 1px solid rgba(var(--color-foreground), 0.2);
  border-radius: 4px;
  font-size: 1rem;
}

.quantity__input:focus {
  outline: none;
  border-color: rgba(var(--color-foreground), 0.5);
}

.quick-view-product__button {
  width: 100%;
  padding: 1rem;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  border-radius: 4px;
  margin-bottom: 1rem;
  border: none;
  transition: all 0.2s;
}

.quick-view-product__button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.quick-view-product__link {
  display: block;
  text-align: center;
  color: rgba(var(--color-foreground), 0.7);
  text-decoration: none;
  font-size: 0.875rem;
  font-weight: 500;
  transition: color 0.2s;
}

.quick-view-product__link:hover {
  color: rgba(var(--color-foreground), 1);
  text-decoration: underline;
}

@media screen and (max-width: 749px) {
  .quick-view-product__grid {
    grid-template-columns: 1fr;
    gap: 1.5rem;
  }
  
  .quick-view-product__title {
    font-size: 1.375rem;
  }
  
  .price {
    font-size: 1.25rem;
  }
}
</style>
