
{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'collection-search.css' | asset_url | stylesheet_tag }}

{{ 'component-product-variant-picker.css' | asset_url | stylesheet_tag }}
{{ 'component-swatch-input.css' | asset_url | stylesheet_tag }}
{{ 'component-swatch.css' | asset_url | stylesheet_tag }}
    
<script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
  
{% if section.settings.image_shape == 'blob' %}
  {{ 'mask-blobs.css' | asset_url | stylesheet_tag }}
{%- endif -%}

{%- unless section.settings.quick_add == 'none' -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
{%- endunless -%}

{%- if section.settings.quick_add == 'standard' -%}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- if section.settings.quick_add == 'bulk' -%}
  <script src="{{ 'quick-add-bulk.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quantity-popover.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'quick-order-list.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="section-{{ section.id }}-padding gradient color-{{ section.settings.color_scheme }}">
  {%- paginate collection.products by section.settings.products_per_page -%}
    {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
    {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
      <facet-filters-form class="facets facets-vertical-sort page-width small-hide">
        <form class="facets-vertical-form" id="FacetSortForm">
          <div class="facet-filters sorting caption">
            <div class="facet-filters__field">
              <h2 class="facet-filters__label caption-large text-body">
                <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
              </h2>
              <div class="select">
                {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
                <select
                  name="sort_by"
                  class="facet-filters__sort select__select caption-large"
                  id="SortBy"
                  aria-describedby="a11y-refresh-page-message"
                >
                  {%- for option in collection.sort_options -%}
                    <option
                      value="{{ option.value | escape }}"
                      {% if option.value == sort_by %}
                        selected="selected"
                      {% endif %}
                    >
                      {{ option.name | escape }}
                    </option>
                  {%- endfor -%}
                </select>
                <span class="svg-wrapper">
                  {{- 'icon-caret.svg' | inline_asset_content -}}
                </span>
              </div>
            </div>
          </div>

          <div class="product-count-vertical light" role="status">
            <h2 class="product-count__text text-body">
              <span id="ProductCountDesktop">
                {%- if collection.results_count -%}
                  {{
                    'templates.search.results_with_count'
                    | t: terms: collection.terms, count: collection.results_count
                  }}
                {%- elsif collection.products_count == collection.all_products_count -%}
                  {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
                {%- else -%}
                  {{
                    'products.facets.product_count'
                    | t: product_count: collection.products_count, count: collection.all_products_count
                  }}
                {%- endif -%}
              </span>
            </h2>
            {%- render 'loading-spinner' -%}
          </div>
        </form>
      </facet-filters-form>
    {%- endif -%}

    <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
      {{ 'component-facets.css' | asset_url | stylesheet_tag }}
      <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
      
      {%- if section.settings.enable_live_search or section.settings.enable_view_toggle -%}
        <div class="collection-toolbar page-width">
          {%- if section.settings.enable_live_search -%}
            <div class="collection-search">
              <input 
                type="text" 
                id="collectionSearchInput" 
                class="collection-search__input"
                placeholder="{{ section.settings.search_placeholder | default: 'Search products...' }}"
                autocomplete="off"
              />
              <span class="collection-search__icon">
                <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M12.5 11h-.79l-.28-.27A6.471 6.471 0 0 0 13 6.5 6.5 6.5 0 1 0 6.5 13c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L17.49 16l-4.99-5zm-6 0C4.01 11 2 8.99 2 6.5S4.01 2 6.5 2 11 4.01 11 6.5 8.99 11 6.5 11z" fill="currentColor"/>
                </svg>
              </span>
            </div>
          {%- endif -%}
          
          {%- if section.settings.enable_view_toggle -%}
            <div class="view-toggle">
              <button class="view-toggle__button view-toggle__button--grid active" data-view="grid" aria-label="Grid view">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                  <rect x="2" y="2" width="6" height="6" stroke="currentColor" stroke-width="1.5"/>
                  <rect x="12" y="2" width="6" height="6" stroke="currentColor" stroke-width="1.5"/>
                  <rect x="2" y="12" width="6" height="6" stroke="currentColor" stroke-width="1.5"/>
                  <rect x="12" y="12" width="6" height="6" stroke="currentColor" stroke-width="1.5"/>
                </svg>
              </button>
              <button class="view-toggle__button view-toggle__button--list" data-view="list" aria-label="List view">
                <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                  <line x1="2" y1="4" x2="18" y2="4" stroke="currentColor" stroke-width="1.5"/>
                  <line x1="2" y1="10" x2="18" y2="10" stroke="currentColor" stroke-width="1.5"/>
                  <line x1="2" y1="16" x2="18" y2="16" stroke="currentColor" stroke-width="1.5"/>
                </svg>
              </button>
            </div>
          {%- endif -%}
        </div>
      {%- endif -%}
      
      {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
        <aside
          aria-labelledby="verticalTitle"
          class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}"
          id="main-collection-filters"
          data-id="{{ section.id }}"
        >
          {% render 'facets',
            results: collection,
            enable_filtering: section.settings.enable_filtering,
            enable_sorting: section.settings.enable_sorting,
            filter_type: section.settings.filter_type,
            paginate: paginate
          %}
        </aside>
      {%- endif -%}

      <div
        class="product-grid-container{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        id="ProductGridContainer"
        {% if settings.animations_reveal_on_scroll %}
          data-cascade
        {% endif %}
      >
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underlined-link link'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div
            class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}"
          >
            <div class="loading-overlay gradient"></div>
            <div id="AjaxinateContainer">
            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              class="
                grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                grid--{{ section.settings.columns_desktop }}-col-desktop
                {% if section.settings.quick_add == 'bulk' %} collection-quick-add-bulk{% endif %}
              "
            >
              {% assign skip_card_product_styles = false %}
              {%- for product in collection.products -%}
                {% assign lazy_load = false %}
                {%- if forloop.index > 2 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}
                                <li
                  class="grid__item{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
                  {% if settings.animations_reveal_on_scroll %}
                    data-cascade
                    style="--animation-order: {{ forloop.index }};" 
                  {% endif %}
                >
                  <div class="product-card-wrapper">
                    {% render 'card-product',
                      card_product: product,
                      media_aspect_ratio: section.settings.image_ratio,
                      image_shape: section.settings.image_shape,
                      show_secondary_image: section.settings.show_secondary_image,
                      show_vendor: section.settings.show_vendor,
                      show_rating: section.settings.show_rating,
                      lazy_load: lazy_load,
                      skip_styles: skip_card_product_styles,
                      quick_add: section.settings.quick_add,
                      section_id: section.id
                    %}
                    {%- if section.settings.enable_quick_view -%}
                      <button class="quick-view-button" data-product-handle="{{ product.handle }}" aria-label="Quick view {{ product.title }}">
                        <svg width="18" height="18" viewBox="0 0 24 24" fill="none">
                          <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z" fill="currentColor"/>
                        </svg>
                        Quick View
                      </button>
                    {%- endif -%}
                  </div>
                </li>
                {%- assign skip_card_product_styles = true -%}
              {%- endfor -%}
            </ul>
            </div>

            <div id="AjaxinatePagination" style="display: flex; justify-content: center;">
                {% if paginate.next %}
                  <a href="{{ paginate.next.url }}" class="button button--secondary load-more-link">Load More</a>
                {% endif %}
            </div>
            {% comment %}
              {%- if paginate.pages > 1 -%}
                {% render 'pagination', paginate: paginate, anchor: '' %}
              {%- endif -%}
            {% endcomment %}
          </div>
        {%- endif -%}
      </div>
    </div>
  {%- endpaginate -%}
  
  {%- if section.settings.enable_quick_view -%}
    <!-- Quick View Modal -->
    <div id="quickViewModal" class="quick-view-modal" aria-hidden="true">
      <div class="quick-view-modal__overlay"></div>
      <div class="quick-view-modal__content">
        <button class="quick-view-modal__close" aria-label="Close quick view">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
            <path d="M18 6L6 18M6 6l12 12" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          </svg>
        </button>
        <div class="quick-view-modal__body">
          <div class="quick-view-loading">
            {%- render 'loading-spinner' -%}
          </div>
          <div id="quickViewContent"></div>
        </div>
      </div>
    </div>
  {%- endif -%}
  
  {% if section.settings.image_shape == 'arch' %}
    {{ 'mask-arch.svg' | inline_asset_content }}
  {%- endif -%}
</div>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 3,
      "max": 36,
      "step": 1,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },    
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "select",
      "id": "quick_add",
      "default": "none",
      "label": "t:sections.main-collection-product-grid.settings.quick_add.label",
      "options": [
        {
          "value": "none",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_1"
        },
        {
          "value": "standard",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_2"
        },
        {
          "value": "bulk",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_3"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "Live Search Settings"
    },
    {
      "type": "checkbox",
      "id": "enable_live_search",
      "default": false,
      "label": "Enable live search"
    },
    {
      "type": "text",
      "id": "search_placeholder",
      "default": "Search products...",
      "label": "Search placeholder text"
    },
    {
      "type": "header",
      "content": "View Options"
    },
    {
      "type": "checkbox",
      "id": "enable_view_toggle",
      "default": true,
      "label": "Enable grid/list view toggle"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_view",
      "default": true,
      "label": "Enable quick view modal"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}


<script>
   // custom js for infinite collection loading start //
  document.addEventListener("DOMContentLoaded", function() {
    var endlessScroll = new Ajaxinate({
      method: 'click', // Change to 'click' if you want a button instead
      container: '#AjaxinateContainer',
      pagination: '#AjaxinatePagination'
    });
  });
 // custom js for infinite collection loading end //

 // Live search functionality start //
 document.addEventListener("DOMContentLoaded", function() {
   const searchInput = document.getElementById('collectionSearchInput');
   
   if (searchInput) {
     searchInput.addEventListener('input', function(e) {
       const searchTerm = e.target.value.toLowerCase();
       const productCards = document.querySelectorAll('#product-grid .grid__item');
       
       productCards.forEach(function(card) {
         const productTitle = card.querySelector('.card__heading, .card-information__text, h3');
         const productVendor = card.querySelector('.caption-with-letter-spacing');
         
         let textToSearch = '';
         
         if (productTitle) {
           textToSearch += productTitle.textContent.toLowerCase();
         }
         
         if (productVendor) {
           textToSearch += ' ' + productVendor.textContent.toLowerCase();
         }
         
         if (textToSearch.includes(searchTerm)) {
           card.style.display = '';
         } else {
           card.style.display = 'none';
         }
       });
     });
   }
 });
 // Live search functionality end //

 // Grid/List view toggle start //
 document.addEventListener("DOMContentLoaded", function() {
   const viewButtons = document.querySelectorAll('.view-toggle__button');
   const productGrid = document.getElementById('product-grid');
   
   if (viewButtons.length > 0 && productGrid) {
     // Load saved view preference
     const savedView = localStorage.getItem('collectionView') || 'grid';
     setView(savedView);
     
     viewButtons.forEach(function(button) {
       button.addEventListener('click', function() {
         const view = this.getAttribute('data-view');
         setView(view);
         localStorage.setItem('collectionView', view);
       });
     });
     
     function setView(view) {
       viewButtons.forEach(btn => btn.classList.remove('active'));
       const activeButton = document.querySelector(`[data-view="${view}"]`);
       if (activeButton) activeButton.classList.add('active');
       
       if (view === 'list') {
         productGrid.classList.add('product-grid--list');
       } else {
         productGrid.classList.remove('product-grid--list');
       }
     }
   }
 });
 // Grid/List view toggle end //

 // Quick View Modal start //
 document.addEventListener("DOMContentLoaded", function() {
   const quickViewButtons = document.querySelectorAll('.quick-view-button');
   const modal = document.getElementById('quickViewModal');
   
   if (modal && quickViewButtons.length > 0) {
     const modalOverlay = modal.querySelector('.quick-view-modal__overlay');
     const modalClose = modal.querySelector('.quick-view-modal__close');
     const modalContent = document.getElementById('quickViewContent');
     const modalLoading = modal.querySelector('.quick-view-loading');
     
     quickViewButtons.forEach(function(button) {
       button.addEventListener('click', function(e) {
         e.preventDefault();
         const productHandle = this.getAttribute('data-product-handle');
         openQuickView(productHandle);
       });
     });
     
     function openQuickView(handle) {
       modal.setAttribute('aria-hidden', 'false');
       modal.classList.add('active');
       document.body.style.overflow = 'hidden';
       modalLoading.style.display = 'flex';
       modalContent.innerHTML = '';
       
       // Fetch product quick view template
       fetch(`/products/${handle}?view=quick`)
         .then(response => {
           if (!response.ok) throw new Error('Network response was not ok');
           return response.text();
         })
         .then(html => {
           modalLoading.style.display = 'none';
           modalContent.innerHTML = html;
           
           // Initialize any scripts in the loaded content
           const scripts = modalContent.querySelectorAll('script');
           scripts.forEach(script => {
             const newScript = document.createElement('script');
             if (script.src) {
               newScript.src = script.src;
             } else {
               newScript.textContent = script.textContent;
             }
             script.parentNode.replaceChild(newScript, script);
           });
         })
         .catch(error => {
           modalLoading.style.display = 'none';
           modalContent.innerHTML = '<div style="padding: 2rem; text-align: center;"><p>Error loading product details. Please try again.</p></div>';
           console.error('Quick view error:', error);
         });
     }
     
     function closeQuickView() {
       modal.setAttribute('aria-hidden', 'true');
       modal.classList.remove('active');
       document.body.style.overflow = '';
     }
     
     modalClose.addEventListener('click', closeQuickView);
     modalOverlay.addEventListener('click', closeQuickView);
     
     // Close on ESC key
     document.addEventListener('keydown', function(e) {
       if (e.key === 'Escape' && modal.classList.contains('active')) {
         closeQuickView();
       }
     });
   }
 });
 // Quick View Modal end //

</script>